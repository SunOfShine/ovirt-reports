<?xml version="1.0" encoding="UTF-8"?>
<inputControl>
    <folder>/Resources/JDBC/Input_Controls/Period_Affected/non-query_IC</folder>
    <name>P_Start_Date</name>
    <version>39</version>
    <label>Dates</label>
    <creationDate>2012-03-08T15:37:22.473+02:00</creationDate>
    <updateDate>2012-04-03T15:25:02.060+03:00</updateDate>
    <type>4</type>
    <mandatory>true</mandatory>
    <readOnly>false</readOnly>
    <visible>true</visible>
    <query>
        <localResource
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="query">
            <folder>/Resources/JDBC/Input_Controls/Period_Affected/non-query_IC/P_Start_Date_files</folder>
            <name>startDate</name>
            <version>1</version>
            <label>startDate</label>
            <creationDate>2012-04-03T15:25:02.060+03:00</creationDate>
            <updateDate>2012-04-03T15:25:02.060+03:00</updateDate>
            <language>sql</language>
            <queryString>SELECT DISTINCT  CASE
                                  WHEN $P{P_Period} = 'Daily' THEN cast(o.the_date as date)
                                   ELSE date_trunc('month', o.the_date)
                           END as active_months,
                           CASE
                                   WHEN $P{P_Period} = 'Daily' THEN cast(cast(o.the_date as date) as varchar)
                                   ELSE cast(cast(date_trunc('month', o.the_date) as date) as varchar) || ' - ' || CASE
                                                                                                                                                        WHEN $P{P_Period} = 'Monthly' THEN CAST(CAST(cast(date_trunc('month', o.the_date) as date) + interval '1 month' - interval '1 day' as date) as varchar)
                                                                                                                                                        WHEN $P{P_Period} = 'Quarterly' THEN CAST(CAST(cast(date_trunc('month', o.the_date) as date) + interval '3 month' - interval '1 day' as date) as varchar)
                                                                                                                                                        WHEN $P{P_Period} = 'Yearly' THEN CAST(CAST(cast(date_trunc('month', o.the_date) as date) + interval '1 year' - interval '1 day' as date) as varchar)
                                                                                                                                                 END
                            END as display_months
FROM calendar as o
WHERE o.the_date &gt;= CASE
                                        WHEN $P{P_Period} = 'Daily' THEN coalesce((SELECT a.var_datetime - interval '2 months'
                                                                                                        FROM History_configuration as a
                                                                                                        WHERE a.var_name = 'lastHourAggr'), to_timestamp('01/01/2219', 'DD/MM/YYYY'))
                                        ELSE coalesce((SELECT date_trunc('month',a.var_datetime)
                                                              FROM History_configuration as a
                                                              WHERE a.var_name = 'firstSync'), to_timestamp('01/01/2219', 'DD/MM/YYYY'))
                                 END
           AND o.the_date &lt;= CASE
                                        WHEN $P{P_Period} = 'Daily' THEN coalesce((SELECT a.var_datetime
                                                                                                        FROM History_configuration as a
                                                                                                        WHERE a.var_name = 'lastHourAggr'), to_timestamp('01/01/2219', 'DD/MM/YYYY'))
                                        ELSE coalesce((SELECT date_trunc('month',a.var_datetime)
                                                       FROM History_configuration as a
                                                       WHERE a.var_name = 'lastHourAggr'), to_timestamp('01/01/2219', 'DD/MM/YYYY'))
                                 END
ORDER BY active_months DESC</queryString>
            <dataSource>
                <uri>/Resources/JDBC/data_sources/ovirt</uri>
            </dataSource>
        </localResource>
    </query>
    <queryVisibleColumn>display_months</queryVisibleColumn>
    <queryValueColumn>active_months</queryValueColumn>
</inputControl>
